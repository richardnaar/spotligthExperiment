<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'refreshRate': &quot;['60', '120']&quot;}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="spot2" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="deg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[800, 600]" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="Müller_et_al_2003" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <CodeComponent name="presentStim">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# switchTime = 0&amp;#10;frameCount = 0&amp;#10;responseGiven = False&amp;#10;targetPair = False&amp;#10;nrOfEntries = 0&amp;#10;cond = [pos2attLeft-1, pos2attRight-1]&amp;#10;counter = 0&amp;#10;opacities = [0,0,0,0]&amp;#10;# List of components&amp;#10;imList = [image_a, image_b, image_c, image_d]&amp;#10;&amp;#10;# Make the symbols visible&amp;#10;for im in imList:&amp;#10;    im.opacity = 1&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="#fix.draw() # Present fixation&amp;#10;rects.draw() # Present place holder boxes&amp;#10;&amp;#10;# List of default place holder box opacities, this will be over written for one frame by checkOpaStatus if necessary&amp;#10;# This is just to keep the duration of &quot;on frame&quot; ~ 1000/60.8 ms &amp;#10;if sum(opacities) and frameConst-counter &lt;= 1:&amp;#10;    opacities = [0,0,0,0]&amp;#10;    counter = 0&amp;#10;else:&amp;#10;    counter += 1&amp;#10;# Sync at 533.3(3) ms after the start &amp;#10;frameNow = startFrame + frameN &amp;#10;# Change the opacity based cycle duration in frames&amp;#10;opacities = checkOpaStatus(opacities, flipAfterEvery, frameNow)&amp;#10;# Change the opacity of the place holders&amp;#10;if t &lt;= stimDur-waitRespTime:&amp;#10;    rects.opacities = opacities&amp;#10;else: # If the presentation is over set back to 1&amp;#10;    rects.opacities = 1 # after last set of symbols have presented&amp;#10;&amp;#10;# Change symbol after 183.3(3) ms&amp;#10;if frameN % symShowFrames == 0: # symShowFrames == 11 frames with 60 Hz monitor&amp;#10;    # Take random images from the set&amp;#10;    imCount = 0&amp;#10;    for im in imList:&amp;#10;        im.image = imageArray[randImage[imCount]]&amp;#10;        imCount += 1&amp;#10;    # If the target is in both of the target locations then&amp;#10;    if 'target' in imageArray[randImage[cond[0]]] and 'target' in imageArray[randImage[cond[1]]]:&amp;#10;        # If its first pair in the trial or wait time has exceeded&amp;#10;        if frameN-frameCount &gt;= waitNextPairFrames or not nrOfEntries:&amp;#10;            # If last set included target pair and no resp was recorded&amp;#10;            if targetPair and not responseGiven:&amp;#10;                addData('noResp', targetPair, absNumOfTrials, nrOfEntries) # Add data&amp;#10;                nrOfEntries += 1 # Keep track of number of entries in the current trial&amp;#10;            switchTime = t # Start the clock&amp;#10;            targetPair = True # This will be set False after every response (also in the very beginning)&amp;#10;            frameCount = frameN # This will be used to check if wait time has exceeded&amp;#10;            responseGiven = False # To keep track if response was already recorded&amp;#10;        else: # If wait time is not over yet but random sampling gave a another pair of &amp;#10;            # targets then just change one of them randomly to non-target&amp;#10;            imList[cond[randint(0,1)]].image = nonTargetSet[randint(0,4)]&amp;#10;    shuffle(randImage) # Shuffle for the next round&amp;#10;&amp;#10;# Check keys&amp;#10;keys = kb.getKeys()&amp;#10;&amp;#10;if keys:&amp;#10;    if 'space' in keys[-1].name:&amp;#10;        if not targetPair:&amp;#10;            addData('false alarm', targetPair, absNumOfTrials, nrOfEntries)&amp;#10;#            addData('false alarm', targetPair) # , absNumOfTrials, nrOfEntries&amp;#10;        else:&amp;#10;            addData(t-switchTime, targetPair, absNumOfTrials, nrOfEntries)&amp;#10;        nrOfEntries += 1&amp;#10;        responseGiven = True&amp;#10;        targetPair = False&amp;#10;    elif 'escape' in keys[-1].name:&amp;#10;        core.quit()&amp;#10;&amp;#10;# Do not show the symbols if the presentation is over (response will be still recorded)&amp;#10;if t &gt; stimDur-waitRespTime and imList[0].opacity:&amp;#10;    for im in imList:&amp;#10;        im.opacity = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="presentStim" valType="code"/>
      </CodeComponent>
      <ImageComponent name="image_a">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="4.1" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set during: iti.ISI" val="$imageArray[randImage[0]]" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_a" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="xys[0]" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="symbolSize" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$stimDur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="32" valType="num"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
      <ImageComponent name="image_b">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="4.1" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set during: iti.ISI" val="$imageArray[randImage[1]]" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_b" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="xys[1]" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="symbolSize" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$stimDur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="32" valType="num"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
      <ImageComponent name="image_c">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="4.1" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set during: iti.ISI" val="$imageArray[randImage[2]]" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_c" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="xys[2]" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="symbolSize" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$stimDur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="32" valType="num"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
      <ImageComponent name="image_d">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="4.1" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set during: iti.ISI" val="$imageArray[randImage[3]]" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image_d" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="xys[3]" valType="list"/>
        <Param name="saveStartStop" updates="None" val="False" valType="bool"/>
        <Param name="size" updates="constant" val="symbolSize" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$stimDur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="32" valType="num"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
      </ImageComponent>
      <TextComponent name="fix2">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="4.1" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="1" valType="num"/>
        <Param name="name" updates="None" val="fix2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$stimDur" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="intro">
      <CodeComponent name="define_rects">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="# Multiplier that scales the presentation times if the refresh rate is not 60&amp;#10;frameConst = int(expInfo['refreshRate'])/60 &amp;#10;&amp;#10;# This is to make flicker frequencies to sync at 533.3(3) ms after the start of the presentation&amp;#10;startFrame = 390 * frameConst &amp;#10;&amp;#10;# Waiting response after each presentation for that amount of time &amp;#10;# This also means essentially that the &quot;blank period&quot; is this + whatever gets defined in iti routine&amp;#10;waitRespTime = 1 &amp;#10;&amp;#10;# NB! Actual stimulus duration is stimDur - waitRespTime &amp;#10;stimDur = 4.1 # (e.g. 186 + 60 frames with 60 Hz)&amp;#10;&amp;#10;k = 1 # Just a scaler making it easier to rescale the sizes&amp;#10;boxSize = (2.5*k, 3.2*k)&amp;#10;symbolSize = (1.5*k, 2.5*k)&amp;#10;&amp;#10;# Distance from centre to the centre of the stimuli in deg&amp;#10;ecc = [5.75, 10.75] &amp;#10;# ecc = [4, 9]&amp;#10;&amp;#10;# List of box positions &amp;#10;xys = [(ecc[1]*-1,0), (ecc[0]*-1,0),(ecc[0],0), (ecc[1],0)] &amp;#10;&amp;#10;# Array of place holder boxes to be presented on screen&amp;#10;rects = visual.ElementArrayStim(win, name = 'rects', units='deg', &amp;#10;fieldPos=(0.0, 0.0), fieldSize=(24, 4), fieldShape='square', &amp;#10;nElements=4, sizes= boxSize, xys=xys, &amp;#10;colors=([1.0, 1.0, 1.0]) , colorSpace='rgb', opacities=1, oris=0, &amp;#10;sfs=0, contrs=[1, 1,1,1], phases=0, elementTex='sqr',&amp;#10;elementMask=None, texRes=48, interpolate=True, &amp;#10;autoLog=None, maskParams=None)&amp;#10;&amp;#10;# Make keyboard object&amp;#10;kb = keyboard.Keyboard()&amp;#10;&amp;#10;# List of images used&amp;#10;imageArray = ['stimuli/rect_ur.png','stimuli/rect_dr.png','stimuli/rect_dl.png','stimuli/rect_ul.png','stimuli/rect_target.png']&amp;#10;#imageArray = ['stimuli/rect_ur.jpg','stimuli/rect_dr.jpg','stimuli/rect_dl.jpg','stimuli/rect_ul.jpg','stimuli/rect_target.jpg']&amp;#10;&amp;#10;# If there are 4x as many target stimuli in the selection then random sampling &amp;#10;# (without replacement) will give aprox. 70% trials with 1-3 target pairs&amp;#10;randImage = [0,1,2,3,4,4,4,4] # Each number represents a symbol (4 == target)&amp;#10;shuffle(randImage) # Shuffle the pool for the first round&amp;#10;# A set with no targets (to replace targets if minimum interval of 905 ms have not eceeded after presenting the last target pair)&amp;#10;nonTargetSet = imageArray[0:4] &amp;#10;# This helps with data entries (see the code component in the trial routine)&amp;#10;def addData(rt, isPair, trials, nrOfEntries):&amp;#10;    if nrOfEntries &gt; 0:&amp;#10;        thisExp.nextEntry()&amp;#10;    thisExp.addData('RT', rt) &amp;#10;    thisExp.addData('targetPair', isPair)&amp;#10;    thisExp.addData('absNumOfTrials', trials)&amp;#10;&amp;#10;# Flip after that many frames (on 60 hz monitor)&amp;#10;flipAfterOriginal = [4, 7, 3, 5]&amp;#10;# Multiply with the scaler&amp;#10;flipAfterEvery = [element * frameConst for element in flipAfterOriginal] &amp;#10;&amp;#10;# This checks if opacity of the box needs to be turned up  (see the code component in the trial routine)&amp;#10;def checkOpaStatus(opas, frames, frameNow):&amp;#10;    for opai in range(0, len(opas)):&amp;#10;        if frameNow % frames[opai] == 0:&amp;#10;            opas[opai] = 1&amp;#10;    return opas&amp;#10;&amp;#10;# change the symbol in that many frames&amp;#10;symShowFrames = 11*frameConst&amp;#10;&amp;#10;waitNextPairFrames = 55*frameConst" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="frameConst = (Number.parseInt(expInfo[&quot;refreshRate&quot;]) / 60);&amp;#10;ecc = [5.25, 10.25];&amp;#10;xys = [[(ecc[1] * (- 1)), 0], [(ecc[0] * (- 1)), 0], [ecc[0], 0], [ecc[1], 0]];&amp;#10;rects = new visual.ElementArrayStim(psychoJS.window, {&quot;name&quot;: &quot;rects&quot;, &quot;units&quot;: &quot;deg&quot;, &quot;fieldPos&quot;: [0.0, 0.0], &quot;fieldSize&quot;: [24, 4], &quot;fieldShape&quot;: &quot;square&quot;, &quot;nElements&quot;: 4, &quot;sizes&quot;: [2.5, 3.2], &quot;xys&quot;: xys, &quot;colors&quot;: [1.0, 1.0, 1.0], &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacities&quot;: 1, &quot;oris&quot;: 0, &quot;sfs&quot;: 0, &quot;contrs&quot;: [1, 1, 1, 1], &quot;phases&quot;: 0, &quot;elementTex&quot;: &quot;sqr&quot;, &quot;elementMask&quot;: null, &quot;texRes&quot;: 48, &quot;interpolate&quot;: true, &quot;autoLog&quot;: null, &quot;maskParams&quot;: null});&amp;#10;fixation = new visual.ShapeStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;fixation&quot;, &quot;vertices&quot;: &quot;cross&quot;, &quot;size&quot;: [0.5, 0.5], &quot;units&quot;: &quot;deg&quot;, &quot;ori&quot;: 0.0, &quot;pos&quot;: [0, 0], &quot;lineWidth&quot;: 1.0, &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: &quot;white&quot;, &quot;fillColor&quot;: &quot;white&quot;, &quot;opacity&quot;: null, &quot;depth&quot;: (- 3.0), &quot;interpolate&quot;: true});&amp;#10;imageArray = [&quot;stimuli\rect_ur.jpg&quot;, &quot;stimuli\rect_dr.jpg&quot;, &quot;stimuli\rect_dl.jpg&quot;, &quot;stimuli\rect_ul.jpg&quot;, &quot;stimuli\rect_none.jpg&quot;];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="define_rects" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="iti">
      <CodeComponent name="iti_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="absNumOfTrials = 0 # Keeps track of the number of trials " valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="rects.opacities = 1&amp;#10;absNumOfTrials += 1&amp;#10;thisExp.addData('absNumOfTrials', absNumOfTrials) &amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="rects.draw() # Presents place holders (white boxes)&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((t &lt; 1)) {&amp;#10;    continueRoutine = true;&amp;#10;    rects.draw();&amp;#10;    fixation.draw();&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="iti_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="fix">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="1" valType="num"/>
        <Param name="name" updates="None" val="fix" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <StaticComponent name="ISI">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.7" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </StaticComponent>
    </Routine>
    <Routine name="block_intro">
      <TextComponent name="text_block">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="2" valType="num"/>
        <Param name="name" updates="None" val="text_block" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$attendCond" valType="str"/>
        <Param name="units" updates="None" val="deg" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_block_intro">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_block_intro" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="intro"/>
    <LoopInitiator loopType="TrialHandler" name="blocks">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'attendCond': '1+2', 'pos1': 1, 'pos2': 2}, {'attendCond': '1+3', 'pos1': 1, 'pos2': 3}, {'attendCond': '2+3', 'pos1': 2, 'pos2': 3}, {'attendCond': '2+4', 'pos1': 2, 'pos2': 4}, {'attendCond': '1+2', 'pos1': 1, 'pos2': 2}, {'attendCond': '1+3', 'pos1': 1, 'pos2': 3}, {'attendCond': '2+3', 'pos1': 2, 'pos2': 3}, {'attendCond': '2+4', 'pos1': 2, 'pos2': 4}, {'attendCond': '1+2', 'pos1': 1, 'pos2': 2}, {'attendCond': '1+3', 'pos1': 1, 'pos2': 3}, {'attendCond': '2+3', 'pos1': 2, 'pos2': 3}, {'attendCond': '2+4', 'pos1': 2, 'pos2': 4}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="blocks.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="blocks" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="block_intro"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="40" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="iti"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <LoopTerminator name="blocks"/>
  </Flow>
</PsychoPy2experiment>
