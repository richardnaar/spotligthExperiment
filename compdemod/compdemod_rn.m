% complex demodulationfunction[demodmat, phasemat]=compdemod(filemat, targetfreq, bslvec, normflag);if nargin < 4, normflag = 0; endfor index = 1:size(filemat,1);         atgPath = deblank(filemat(index,:)); % remove trailing blanks	    [AvgMat,File,Path,FilePath,NTrialAvgVec,StdChanTimeMat,SampRate] = ReadAvgFile(atgPath);           if nargin > 2    AvgMat = bslcorr(AvgMat, bslvec); % baseline correction?    end	    % sim data    targetfreq = 8;    SampRate = 520;    AvgMat = zeros(16,SampRate*5);        for fi = 1:size(AvgMat,1)        AvgMat(fi,:) = sin(2*pi* (0:1/SampRate:round(size(AvgMat,2)/SampRate)-(1/SampRate)) *fi);    end        	taxis = 0:1000/SampRate:size(AvgMat,2)*1000/SampRate - 1000/SampRate;	taxis = taxis/1000; % has to be in seconds, so we can use hz later on     	M2 = 50;    	squarecos1 = (cos(pi/2:(pi-pi/2)/M2:pi-(pi-pi/2)/M2)).^2;		squarecosfunction = [squarecos1 ones(1,length(taxis)-length(squarecos1).*2) fliplr(squarecos1)];    	[B, A] = butter(4, 0.04);  % 3, 0.008		for channel = 1:size(AvgMat,1)	        Xsin(channel,:) = AvgMat(channel,:) .* squarecosfunction .* sin(targetfreq .*2 *pi * taxis);        Xcos(channel,:) = AvgMat(channel,:) .* squarecosfunction .* cos(targetfreq .*2 *pi * taxis);	           XsinF(channel,:) = filtfilt(B,A,Xsin(channel,:));         XcosF(channel,:) = filtfilt(B,A,Xcos(channel,:));      end        		demodmat = 2 * sqrt(XsinF .^2 + XcosF .^2);        % plot sim    figure(1)    for ploi = 1:16        plot(demodmat(ploi,:))        title(num2str(ploi))        %ylim([0,1.1])        pause()    end            % plot(demodmat')    if ~isempty(bslvec) && normflag == 0        demodmat = bslcorr(demodmat, bslvec);    elseif ~isempty(bslvec) && normflag == 1        demodmat = bslcorr_div(demodmat, bslvec);    end        	phasemat = atan(XsinF ./ XcosF); 	%	[File,Path,FilePath]=SaveAvgFile([atgPath '.amp'],demodmat,NTrialAvgVec,StdChanTimeMat, SampRate);end